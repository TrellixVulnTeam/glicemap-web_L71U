{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/glicemap/glicemap-front/src/layouts/AdminLayout/Navigation/NavContent/NavItem/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListGroup } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport NavIcon from '../NavIcon';\nimport NavBadge from '../NavBadge';\nimport { ConfigContext } from '../../../../../contexts/ConfigContext';\nimport * as actionType from '../../../../../store/actions';\nimport useWindowSize from '../../../../../hooks/useWindowSize';\nimport { API_SERVER } from '../../../../../config/constant';\nimport { LOGOUT } from './../../../../../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavItem = ({\n  layout,\n  item\n}) => {\n  _s();\n\n  const windowSize = useWindowSize();\n  const configContext = useContext(ConfigContext);\n  const {\n    dispatch\n  } = configContext;\n  const account = useSelector(state => state.account);\n  const dispatcher = useDispatch();\n\n  const handleLogout = () => {\n    axios.post(API_SERVER + 'users/logout', {}, {\n      headers: {\n        Authorization: `${account.token}`\n      }\n    }).then(function (response) {\n      // Force the LOGOUT\n      //if (response.data.success) {\n      dispatcher({\n        type: LOGOUT\n      }); //} else {\n      //    console.log('response - ', response.data.msg);\n      //}\n    }).catch(function (error) {\n      console.log('error - ', error);\n    });\n  };\n\n  let itemTitle = item.title;\n\n  if (item.icon) {\n    itemTitle = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pcoded-mtext\",\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this);\n  }\n\n  let itemTarget = '';\n\n  if (item.target) {\n    itemTarget = '_blank';\n  }\n\n  let subContent;\n\n  if (item.external) {\n    subContent = /*#__PURE__*/_jsxDEV(\"a\", {\n      href: item.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: [/*#__PURE__*/_jsxDEV(NavIcon, {\n        items: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), itemTitle, /*#__PURE__*/_jsxDEV(NavBadge, {\n        items: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  } else {\n    if (item.title === 'Logout') {\n      subContent = /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"#\",\n        className: \"nav-link\",\n        exact: true,\n        target: itemTarget,\n        onClick: handleLogout,\n        children: [/*#__PURE__*/_jsxDEV(NavIcon, {\n          items: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), itemTitle, /*#__PURE__*/_jsxDEV(NavBadge, {\n          items: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    } else {\n      subContent = /*#__PURE__*/_jsxDEV(NavLink, {\n        to: item.url,\n        className: \"nav-link\",\n        exact: true,\n        target: itemTarget,\n        children: [/*#__PURE__*/_jsxDEV(NavIcon, {\n          items: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), itemTitle, /*#__PURE__*/_jsxDEV(NavBadge, {\n          items: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  let mainContent = '';\n\n  if (layout === 'horizontal') {\n    mainContent = /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      as: \"li\",\n      bsPrefix: \" \",\n      onClick: () => dispatch({\n        type: actionType.NAV_CONTENT_LEAVE\n      }),\n      children: subContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  } else {\n    if (windowSize.width < 992) {\n      mainContent = /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        as: \"li\",\n        bsPrefix: \" \",\n        className: item.classes,\n        onClick: () => dispatch({\n          type: actionType.COLLAPSE_MENU\n        }),\n        children: subContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this);\n    } else {\n      mainContent = /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        as: \"li\",\n        bsPrefix: \" \",\n        className: item.classes,\n        children: subContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: mainContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 12\n  }, this);\n};\n\n_s(NavItem, \"ogEMw9TXR7lCVDKqAFQWn2zoZV4=\", false, function () {\n  return [useWindowSize, useSelector, useDispatch];\n});\n\n_c = NavItem;\nexport default NavItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavItem\");","map":{"version":3,"sources":["/home/gustavo/glicemap/glicemap-front/src/layouts/AdminLayout/Navigation/NavContent/NavItem/index.js"],"names":["React","useContext","useDispatch","useSelector","ListGroup","NavLink","axios","NavIcon","NavBadge","ConfigContext","actionType","useWindowSize","API_SERVER","LOGOUT","NavItem","layout","item","windowSize","configContext","dispatch","account","state","dispatcher","handleLogout","post","headers","Authorization","token","then","response","type","catch","error","console","log","itemTitle","title","icon","itemTarget","target","subContent","external","url","mainContent","NAV_CONTENT_LEAVE","width","classes","COLLAPSE_MENU"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport NavIcon from '../NavIcon';\r\nimport NavBadge from '../NavBadge';\r\n\r\nimport { ConfigContext } from '../../../../../contexts/ConfigContext';\r\nimport * as actionType from '../../../../../store/actions';\r\nimport useWindowSize from '../../../../../hooks/useWindowSize';\r\nimport { API_SERVER } from '../../../../../config/constant';\r\nimport { LOGOUT } from './../../../../../store/actions';\r\n\r\nconst NavItem = ({ layout, item }) => {\r\n    const windowSize = useWindowSize();\r\n    const configContext = useContext(ConfigContext);\r\n    const { dispatch } = configContext;\r\n    const account = useSelector((state) => state.account);\r\n    const dispatcher = useDispatch();\r\n    const handleLogout = () => {\r\n        axios\r\n            .post(API_SERVER + 'users/logout', {}, { headers: { Authorization: `${account.token}` } })\r\n            .then(function (response) {\r\n                // Force the LOGOUT\r\n                //if (response.data.success) {\r\n                dispatcher({ type: LOGOUT });\r\n                //} else {\r\n                //    console.log('response - ', response.data.msg);\r\n                //}\r\n            })\r\n            .catch(function (error) {\r\n                console.log('error - ', error);\r\n            });\r\n    };\r\n\r\n    let itemTitle = item.title;\r\n    if (item.icon) {\r\n        itemTitle = <span className=\"pcoded-mtext\">{item.title}</span>;\r\n    }\r\n\r\n    let itemTarget = '';\r\n    if (item.target) {\r\n        itemTarget = '_blank';\r\n    }\r\n\r\n    let subContent;\r\n    if (item.external) {\r\n        subContent = (\r\n            <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <NavIcon items={item} />\r\n                {itemTitle}\r\n                <NavBadge items={item} />\r\n            </a>\r\n        );\r\n    } else {\r\n        if (item.title === 'Logout') {\r\n            subContent = (\r\n                <NavLink to='#' className=\"nav-link\" exact={true} target={itemTarget} onClick={handleLogout}>\r\n                    <NavIcon items={item} />\r\n                    {itemTitle}\r\n                    <NavBadge items={item} />\r\n                </NavLink>\r\n            );\r\n        } else {\r\n            subContent = (\r\n                <NavLink to={item.url} className=\"nav-link\" exact={true} target={itemTarget}>\r\n                    <NavIcon items={item} />\r\n                    {itemTitle}\r\n                    <NavBadge items={item} />\r\n                </NavLink>\r\n            );\r\n        }\r\n    }\r\n    let mainContent = '';\r\n    if (layout === 'horizontal') {\r\n        mainContent = (\r\n            <ListGroup.Item as=\"li\" bsPrefix=\" \" onClick={() => dispatch({ type: actionType.NAV_CONTENT_LEAVE })}>\r\n                {subContent}\r\n            </ListGroup.Item>\r\n        );\r\n    } else {\r\n        if (windowSize.width < 992) {\r\n            mainContent = (\r\n                <ListGroup.Item as=\"li\" bsPrefix=\" \" className={item.classes} onClick={() => dispatch({ type: actionType.COLLAPSE_MENU })}>\r\n                    {subContent}\r\n                </ListGroup.Item>\r\n            );\r\n        } else {\r\n            mainContent = (\r\n                <ListGroup.Item as=\"li\" bsPrefix=\" \" className={item.classes}>\r\n                    {subContent}\r\n                </ListGroup.Item>\r\n            );\r\n        }\r\n    }\r\n\r\n    return <React.Fragment>{mainContent}</React.Fragment>;\r\n};\r\n\r\nexport default NavItem;\r\n"]},"metadata":{},"sourceType":"module"}