{"ast":null,"code":"var _jsxFileName = \"/home/gustavo/glicemap/glicemap-front/src/layouts/AdminLayout/NavBar/NavRight/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListGroup, Dropdown, Media } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport axios from 'axios';\nimport ChatList from './ChatList';\nimport { API_SERVER } from '../../../../config/constant';\nimport { LOGOUT } from './../../../../store/actions';\nimport avatar1 from '../../../../assets/images/user/avatar-1.jpg';\nimport avatar2 from '../../../../assets/images/user/avatar-2.jpg';\nimport avatar3 from '../../../../assets/images/user/avatar-3.jpg';\nimport avatar4 from '../../../../assets/images/user/avatar-4.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavRight = () => {\n  _s();\n\n  const account = useSelector(state => state.account);\n  const dispatcher = useDispatch();\n  const [listOpen, setListOpen] = useState(false);\n\n  const handleLogout = () => {\n    axios.post(API_SERVER + 'users/logout', {}, {\n      headers: {\n        Authorization: `${account.token}`\n      }\n    }).then(function (response) {\n      // Force the LOGOUT\n      //if (response.data.success) {\n      dispatcher({\n        type: LOGOUT\n      }); //} else {\n      //    console.log('response - ', response.data.msg);\n      //}\n    }).catch(function (error) {\n      console.log('error - ', error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      as: \"ul\",\n      bsPrefix: \" \",\n      className: \"navbar-nav ml-auto\",\n      id: \"navbar-right\",\n      children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        as: \"li\",\n        bsPrefix: \" \",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: \"dud-logout\",\n          onClick: handleLogout,\n          title: \"Logout\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"feather icon-log-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatList, {\n      listOpen: listOpen,\n      closed: () => setListOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavRight, \"DPIJTNMrJV8g5fvU0Ec1Xb9KtYw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = NavRight;\nexport default NavRight;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavRight\");","map":{"version":3,"sources":["/home/gustavo/glicemap/glicemap-front/src/layouts/AdminLayout/NavBar/NavRight/index.js"],"names":["React","useState","useDispatch","useSelector","ListGroup","Dropdown","Media","Link","PerfectScrollbar","axios","ChatList","API_SERVER","LOGOUT","avatar1","avatar2","avatar3","avatar4","NavRight","account","state","dispatcher","listOpen","setListOpen","handleLogout","post","headers","Authorization","token","then","response","type","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,KAA9B,QAA2C,iBAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGf,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B;AACA,QAAME,UAAU,GAAGlB,WAAW,EAA9B;AAEA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMsB,YAAY,GAAG,MAAM;AACvBd,IAAAA,KAAK,CACAe,IADL,CACUb,UAAU,GAAG,cADvB,EACuC,EADvC,EAC2C;AAAEc,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,GAAER,OAAO,CAACS,KAAM;AAAlC;AAAX,KAD3C,EAEKC,IAFL,CAEU,UAAUC,QAAV,EAAoB;AACtB;AACA;AACAT,MAAAA,UAAU,CAAC;AAAEU,QAAAA,IAAI,EAAElB;AAAR,OAAD,CAAV,CAHsB,CAItB;AACA;AACA;AACH,KATL,EAUKmB,KAVL,CAUW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACH,KAZL;AAaH,GAdD;;AAgBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,IAAd;AAAmB,MAAA,QAAQ,EAAC,GAA5B;AAAgC,MAAA,SAAS,EAAC,oBAA1C;AAA+D,MAAA,EAAE,EAAC,cAAlE;AAAA,6BACI,QAAC,SAAD,CAAW,IAAX;AAAgB,QAAA,EAAE,EAAC,IAAnB;AAAwB,QAAA,QAAQ,EAAC,GAAjC;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAa,UAAA,SAAS,EAAC,YAAvB;AAAoC,UAAA,OAAO,EAAET,YAA7C;AAA2D,UAAA,KAAK,EAAC,QAAjE;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF,QAApB;AAA8B,MAAA,MAAM,EAAE,MAAMC,WAAW,CAAC,KAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlCD;;GAAML,Q;UACcd,W,EACGD,W;;;KAFjBe,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ListGroup, Dropdown, Media } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport axios from 'axios';\n\nimport ChatList from './ChatList';\nimport { API_SERVER } from '../../../../config/constant';\nimport { LOGOUT } from './../../../../store/actions';\n\nimport avatar1 from '../../../../assets/images/user/avatar-1.jpg';\nimport avatar2 from '../../../../assets/images/user/avatar-2.jpg';\nimport avatar3 from '../../../../assets/images/user/avatar-3.jpg';\nimport avatar4 from '../../../../assets/images/user/avatar-4.jpg';\n\nconst NavRight = () => {\n    const account = useSelector((state) => state.account);\n    const dispatcher = useDispatch();\n\n    const [listOpen, setListOpen] = useState(false);\n\n    const handleLogout = () => {\n        axios\n            .post(API_SERVER + 'users/logout', {}, { headers: { Authorization: `${account.token}` } })\n            .then(function (response) {\n                // Force the LOGOUT\n                //if (response.data.success) {\n                dispatcher({ type: LOGOUT });\n                //} else {\n                //    console.log('response - ', response.data.msg);\n                //}\n            })\n            .catch(function (error) {\n                console.log('error - ', error);\n            });\n    };\n\n    return (\n        <React.Fragment>\n            <ListGroup as=\"ul\" bsPrefix=\" \" className=\"navbar-nav ml-auto\" id=\"navbar-right\">\n                <ListGroup.Item as=\"li\" bsPrefix=\" \">\n                    <Link to=\"#\" className=\"dud-logout\" onClick={handleLogout} title=\"Logout\">\n                        <i className=\"feather icon-log-out\" /><span> Logout</span>\n                    </Link>\n                </ListGroup.Item>\n            </ListGroup>\n            <ChatList listOpen={listOpen} closed={() => setListOpen(false)} />\n        </React.Fragment>\n    );\n};\n\nexport default NavRight;\n"]},"metadata":{},"sourceType":"module"}